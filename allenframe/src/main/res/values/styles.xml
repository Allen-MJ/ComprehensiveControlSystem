<?xml version="1.0" encoding="utf-8"?>
<resources>
<!-- 这里面的内容根据你自己项目做修改 -->
    <style name="AppTheme" parent="Theme.AppCompat.Light.NoActionBar">
        <!--colorPrimaryDark对应状态栏的颜色-->
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <!--colorPrimary对应ActionBar的颜色-->
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="android:windowBackground">@color/background_material_light</item>
        <!--colorAccent 对应EditText编辑时、RadioButton选中、CheckBox等选中时的颜色-->
        <item name="colorAccent">@color/colorAccent</item>
        <item name="colorControlNormal">@android:color/white</item>
        <item name="drawerArrowStyle">@style/AppTheme.DrawerArrowToggle</item>
        <item name="android:textColorSecondary">@color/background_material_light</item>
        <item name="actionMenuTextColor">@android:color/white</item>
        <item name="android:actionMenuTextAppearance">@style/MenuTextStyle</item>
        <item name="android:checkboxStyle">@style/AppTheme.CheckBox</item>
    </style>
	<style name="AppTheme.Toolbar" parent="@style/ThemeOverlay.AppCompat.Dark.ActionBar">
        <item name="actionMenuTextColor">@android:color/white</item>  敲定颜色
        <item name="colorButtonNormal">@android:color/white</item>
        <item name="colorControlNormal">@android:color/white</item>
        <item name="android:textSize">@dimen/frame_text_middle_size</item>  搞掂字体大小 
        <item name="drawerArrowStyle">@style/AppTheme.DrawerArrowToggle</item>
        <item name="actionOverflowMenuStyle">@style/OverflowMenuStyle</item>
	</style>
    <style name="AppTheme.CheckBox" parent="Widget.AppCompat.CompoundButton.CheckBox">
        <item name="android:button">@drawable/ic_checkbox_selecor</item>
    </style>
	<style name="OverflowMenuStyle" parent="@style/Widget.AppCompat.PopupMenu.Overflow">
	    是否覆盖锚点，默认为true，即盖住Toolbar
	    <item name="overlapAnchor">true</item>
	    弹出层背景颜色
	    <item name="android:popupBackground">@color/colorPrimary</item>
	    弹出层垂直方向上的偏移，即在竖直方向上距离Toolbar的距离，值为负则会盖住Toolbar
	    <item name="android:dropDownVerticalOffset">0dp</item>
	    弹出层水平方向上的偏移，即距离屏幕左边的距离，负值会导致右边出现空隙
	    <item name="android:dropDownHorizontalOffset">0dp</item>
	</style>
    <!-- 测试非透明主题模式 -->
    <style name="AppTheme.SwipeBack">
        <item name="android:windowBackground">@color/background_material_light</item>
        <item name="android:windowIsTranslucent">false</item>
    </style>

    <!-- 测试透明主题模式 -->
    <style name="AppTheme.SwipeBack.Translucent">
        <item name="android:windowBackground">@android:color/transparent</item>
        <item name="android:windowIsTranslucent">true</item>
    </style>
    
    <style name="Theme.Toolbar.AppTheme" parent="Theme.AppCompat.Light.NoActionBar">
        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorAccent</item>
        <item name="colorControlNormal">@android:color/white</item>
        <item name="drawerArrowStyle">@style/AppTheme.DrawerArrowToggle</item>
        <item name="android:textColorSecondary">@color/background_material_light</item>
        <item name="actionMenuTextColor">@android:color/white</item>
    </style>
    <style name="AppTheme.DrawerArrowToggle" parent="Base.Widget.AppCompat.DrawerArrowToggle">
        <item name="color">@android:color/white</item>
    </style>
    
    <style name="Theme.Swipe.Back.NoActionBar" parent="Theme.Toolbar.AppTheme">
        <item name="android:windowIsTranslucent">true</item>
        <item name="android:windowBackground">@android:color/transparent</item>
    </style>
    
    <style name="Transparent">
        <item name="android:windowIsTranslucent">true</item>
        <item name="android:windowBackground">@android:color/transparent</item>
    </style>
    
    <style name="Toolbar.TitleText" parent="TextAppearance.Widget.AppCompat.Toolbar.Title">
    	<item name="android:textSize">@dimen/frame_text_big_size</item>
    	<item name="android:textColor">@color/text_white_color</item>
	</style>

    <style name="Light.Toolbar.TitleText" parent="TextAppearance.Widget.AppCompat.Toolbar.Title">
    	<item name="android:textSize">@dimen/frame_text_big_size</item>
    	<item name="android:textColor">@color/text_black_color</item>
	</style>

	<style name="TabLayout.Style" parent="@style/Widget.Design.TabLayout">
	    <item name="tabTextAppearance">@style/TabLayout.Text.Style</item>
	    <item name="tabSelectedTextColor">?attr/colorAccent</item>
	</style>
	<style name="TabLayout.Text.Style" parent="@style/TextAppearance.Design.Tab">
	    <item name="android:textSize">@dimen/frame_text_small_size</item>
	    <item name="android:textColor">@color/text_black_color</item>
	    <item name="android:textStyle">bold</item>
	</style>
	<style name="TextInputLayout.HintTxt.Style" parent="@style/TextAppearance.Design.Hint">
	    <item name="android:textSize">@dimen/frame_text_normal_size</item>
	</style>
	<style name="Allen.Dialog.Theme" parent="@style/Base.V21.Theme.AppCompat.Light.Dialog">
	    <item name="android:textSize">@dimen/frame_text_small_size</item>
	</style>
	<style name="MenuTextStyle">
	    <item name="android:textColor">@android:color/white</item>
	    <item name="android:textSize">@dimen/frame_text_small_size</item>
	</style>
	<style name="JpushDialogStyle">
        <item name="android:windowBackground">@android:color/transparent</item>
        <item name="android:windowFrame">@null</item>
        <item name="android:windowNoTitle">true</item>
        <item name="android:windowIsFloating">true</item>
        <item name="android:windowIsTranslucent">true</item>
        <item name="android:windowContentOverlay">@null</item>
        <item name="android:windowAnimationStyle">@android:style/Animation.Dialog</item>
        <item name="android:backgroundDimEnabled">true</item>
    </style>
    <!-- 动画块设置 系统自带的淡入淡出效果 -->
    <style name="popup_window_anim">
        <item name="android:windowEnterAnimation">@android:anim/fade_in</item>
        <item name="android:windowExitAnimation">@android:anim/fade_out</item>
    </style>

    <!-- dialog底部弹出菜单动画 -->
    <style name="bottom_menu_animation" parent="android:Animation">
        <item name="android:windowEnterAnimation">@anim/bottom_menu_enter</item>
        <item name="android:windowExitAnimation">@anim/bottom_menu_exit</item>
    </style>

    <!-- dialog样式 -->
    <style name="dialog_custom" parent="@android:style/Theme.Dialog">
        <item name="android:windowIsFloating">true</item>
        <!-- 是否浮在界面上 -->
        <item name="android:windowIsTranslucent">true</item>
        <!-- 是否半透明 -->
        <item name="android:windowNoTitle">false</item>
        <!-- 是否有标题 -->
        <item name="android:windowBackground">@android:color/transparent</item>
        <!-- 窗口背景色透明 -->
        <item name="android:backgroundDimEnabled">true</item>
        <!-- 背景是否模糊显示 -->
    </style>

    <style name="menu_labels_style">
        <item name="android:background">@drawable/fab_label_background</item>
        <item name="android:textColor">@color/white</item>
    </style>

    <!--首页 start-->
    <style name="bottomActiveTextStyle" parent="Widget.Design.BottomNavigationView">
        <item name="android:textSize">@dimen/frame_text_small_size</item>
        <item name="itemIconSize">@dimen/frame_edge_distance</item>
    </style>
    <style name="bottomInActiveTextStyle" parent="Widget.Design.BottomNavigationView">
        <item name="android:textSize">@dimen/frame_text_smaller_size</item>
        <item name="itemIconSize">@dimen/frame_edge_distance</item>
    </style>
    
</resources>
